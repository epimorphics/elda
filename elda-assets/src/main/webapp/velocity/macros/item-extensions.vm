## An extension point to show content-specific enhancements to the display
## of individual items. Content-detection variables are set in
## partials/content-detection.vm called from index.vm

#macro( itemVisualExtension $resource $rowClass )
  #if( $mapDisplay && $resource.hasAllProperties( $longLatProps ))
    #resourceMap( $resource, $rowClass )
  #end
#end

#macro( resourceMap $resource $rowClass )
  #if( ! $mapCounter )
    #set( $mapCounter = 1 )
  #end
  #set( $longLatTriples = $resource.extractByPredicate( $longLatProps ) )
  #if ($longLatTriples.size() > 0)
    <div class="$rowClass">
      <div class="col-md-8">
        <ul class="resource-properties extensions">
          #renderProperties( $longLatTriples, 6, 6 )
        </ul>
      </div>
      <div class="col-md-4">
        <div class="item-extension map">
          #set( $mapId = "map-" + $item.rdfNode().shortUniqueID() + "-" + $mapCounter )
          #set( $mapCounter = $mapCounter + 1 )
          #set( $long = $longLatTriples.get( 0 ).rdfNode().getLexicalForm() )
          #set( $lat  = $longLatTriples.get( 1 ).rdfNode().getLexicalForm() )
          <div id="$mapId"></div>
          <script>
            require( ['app/maps'], function( EldaMaps ) {
              EldaMaps.addSmallMap( "$mapId", $long, $lat, {w:16, h:16, image: "$assets/images/target.png"} );
            } );
          </script>
        </div>
      </div>
    </div>
  #end
#end

## Hook for showing additional visual presentations based on content. Default
## behaviours:
## * if at least some items have locations, show a map for the whole results group
#macro( groupVisualExtensions $hierarchy )
  <div>
    #parse( "partials/page-size.vm" )
  </div>
  #if( $mapDisplay)
    #groupMap( $hierarchy )
  #end
#end

## Show a map for a group of results
#macro( groupMap $hierarchy )
  <section>
    <div class="row">
      <div class="col-md-12">
        <h1 class="resource-label">Locations of results</h1>
      </div>
      <div class="col-md-12">
        <div id="resultsMap"></div>
        <script>
          var locations = [];
          #foreach( $resource in $longLatResources )
            locations.push( {lon: $resource.getPropertyValue( "geo:long" ).getLexicalForm(),
                             lat: $resource.getPropertyValue( "geo:lat" ).getLexicalForm(),
                             label: "$resource.getName()"} );
          #end
          require( ['app/maps'], function( EldaMaps ) {
            EldaMaps.addLargeMap( "resultsMap", locations, {w:16, h:16, image: "$assets/images/target.png"} );
          } );
        </script>
      </div>
    </div>
  </section>
#end
