# minimal operational config

# This LDA description is a "getting started" configuration.
# Replace all references to the SPARQL endpoint
#
#	http://education.data.gov.uk/sparql/education/query
#
# with your SPARQL endpoint of interest. 
#
# The /anything endpoint will display some (10) items from the SPARQL
# endpoint that have an rdf:type property. 
#
# The /about?resource=URI endpoint will display information about the
# resource with the given URI from that SPARQL endpoint.
#
# The /mentions?resource=URI will display information about 
# resources that 'mention' URI, ie, are objects of some property 
# of that item.
#

@prefix rdfs:   <http://www.w3.org/2000/01/rdf-schema#> .
@prefix spec:	<http://education.data.gov.uk/api-config#> .
@prefix api:    <http://purl.org/linked-data/api/vocab#> .
@prefix elda:   <http://www.epimorphics.com/vocabularies/lda#> .

spec:minimal a api:API
	; api:base "/"
	; rdfs:label "a minimal demonstration API"
	; api:sparqlEndpoint <http://localhost:3030/store/query>
	# ; api:sparqlEndpoint <http://education.data.gov.uk/sparql/education/query>
	; api:defaultViewer api:labelledDescribeViewer
	; api:defaultFormatter spec:HtmlFormatter 
	; api:viewer api:describeViewer, api:labelledDescribeViewer, api:basicViewer
	; api:endpoint 
		spec:about
		, spec:anything
		, spec:mentions
	; api:variable [api:name "_exceptionIfEmpty"; api:value "no"]
	; api:variable [api:name "_resourceRoot"; api:value "http://localhost/elda-assets/"]
	.
	
spec:HtmlFormatter a api:XsltFormatter 
	; api:name "html" 
	; api:mimeType "text/html; charset=utf-8" 
	; api:stylesheet "http://localhost/elda-assets/xslt/result.xsl"
	.

#
# Describe a generic 'thing' as an example of an itemEndpoint.
#
spec:about a api:ItemEndpoint
	; api:uriTemplate     "/about?resource={uri}"
    ; rdfs:comment        "A generic item endpoint API for asking about a specific thing by 'uri'."
    ; api:itemTemplate    "{uri}"
    ; api:viewer          api:basicViewer, api:describeViewer, api:labelledDescribeViewer
    ; api:defaultViewer   api:describeViewer
    .

#
# List 'anything' endpoint
#
spec:anything a api:ListEndpoint
    ; api:name            	"anything" 
    ; rdfs:comment        	"A generic listing endpoint for listing things based solely on URI based filter parameters"@en
    ; api:uriTemplate		"/anything"
    ; api:selector			[api:where   " ?item a ?v1 . FILTER (!isBlank(?item)) "]
    ; api:exampleRequestPath  "/anything"
###
### no selector - defers everything to URI params
###
     ; api:viewer api:describeViewer, api:basicViewer, api:labelledDescribeViewer
     ; api:defaultViewer   api:describeViewer
     .

#
# List things related to a 'mentions' as an example of a ListEndpoint.
#
spec:mentions a api:ListEndpoint
	; api:uriTemplate     "/mentions?resource={uri}"
    ; api:variable [api:name "uri"; api:type rdfs:Resource]
	; api:selector [api:where "?item ?p ?uri . FILTER (!isBlank(?item))"]
	; api:viewer api:basicViewer, api:describeViewer, api:labelledDescribeViewer
	; api:defaultViewer   api:describeViewer;
    .

