#
# A hello-world config. 
#

# Assorted prefix declarations. Some of them are for the structuring
# of the API config, others are for the vocabulary definitions.
#

@prefix api:                <http://purl.org/linked-data/api/vocab#> .
@prefix dct:				<http://purl.org/dc/terms/> .

@prefix rdf:                <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:               <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd:                <http://www.w3.org/2001/XMLSchema#> .

# The elda namespace/prefix is for Elda extensions to the LDA specification.
@prefix elda:               <http://www.epimorphics.com/vocabularies/lda#> .

# Prefix for example-local entities.
@prefix hello:				<http://epimorphics.com/public/vocabulary/games.ttl#>.

# ---------------------------------------------------------------------
# API config

hello:hello-world-again a api:API 
	; rdfs:label "Hello World example #2 -- games"@en
	# Name the SPARQL endpoint which supplies the data we present
	; api:sparqlEndpoint <local:data/example-data.ttl>
	# ; api:sparqlEndpoint <http://localhost:3030/ds/query>
	; api:defaultViewer api:labelledDescribeViewer
	; api:viewer [a api:Viewer; api:name "empty"; api:properties ""]

	; api:variable [api:name "_velocityPath"; api:value "lda-assets/velocity/"]
	; api:variable [api:name "_resourceRoot"; api:value "/standalone/lda-assets/"]

	; api:endpoint 
		hello:publishers, hello:games, hello:about

    ; api:formatter
        [a elda:FeedFormatter
        ; api:name "atom"
        ; elda:className "com.epimorphics.lda.renderers.FeedRendererFactory"
        ; api:mimeType "application/atom+xml"
        ; elda:feedTitle "an example Elda feed"
        ]
    
    ; api:formatter
        [a elda:VelocityFormatter
        ; api:name "html"
        ; elda:className "com.epimorphics.lda.renderers.VelocityRendererFactory"
        ; api:mimeType "text/html"
        ]
        
    ; elda:enableCounting true
   	; elda:cacheExpiryTime "10m"
	.
	
<http://localhost:3030/ds/query> 
    elda:textSearchOperand (rdfs:label "?_search" 99)
    .
    
# Endpoint definitions

hello:publishers a api:ListEndpoint 
	; rdfs:label "Publishers" 
	; api:uriTemplate "/publishers" 
	; api:selector [api:filter "type=Publisher"; api:sort "label"]
	; api:defaultViewer api:labelledDescribeViewer
	.	
	
hello:games a api:ListEndpoint 
	; rdfs:label "Games" 
	; api:uriTemplate "/games" 
	; api:selector [api:filter "type=BoardGame"; api:sort "label"]
	; api:defaultViewer api:labelledDescribeViewer
	; elda:enableCounting false
	.
	
#
# The /about endpoint requires a query parameter whose value
# is a URI; this is the single selected ?item. These URIs
# are typically constructed by the Velocity renderer when
# a resource is clicked on for a dataset-relative link. 
#

hello:about a api:ItemEndpoint
	; rdfs:label "About"
	; api:uriTemplate "/about?resource={uri}"
    ; api:variable [api:name "uri"; api:type rdfs:Resource]
	; api:selector 
		[ api:where "?item ?p ?o. FILTER(?item = ?uri)"
		; api:sort "label"
		]
	; api:defaultViewer api:labelledDescribeViewer
	.

#
# some cache-control examples
#

hello:players elda:cacheExpiryTime "10s".

#
# class and property declarations, setting shortnames and
# property ranges.
#

hello:BoardGame a rdfs:Class
	; rdfs:label "Board Game"
	; api:label "BoardGame"
	.
	
hello:players a rdf:Property
	; api:label "players"
	; rdfs:range xsd:int
	.
	
hello:Publisher a rdfs:Class
	; api:label "Publisher"
	.
	
dct:publisher a rdf:Property
	; api:label "publishes"
	.
	
rdfs:label a rdf:Property
	; api:multiValued true
	; api:label "label"
	.
	
rdf:type a rdf:Property
    ; api:multiValued true 
    ; rdfs:range rdfs:Class 
	; api:label "type"
	.
	
hello:designed-by a rdf:Property
    ; rdfs:range rdfs:Class
	; api:label "designedBy"
	.
	
hello:published-by a rdf:Property
	; api:label "publishedBy"
    ; rdfs:range rdfs:Class 
	.
	
hello:designer-of a rdf:Property
	; api:label "designerOf"
    ; rdfs:range rdfs:Class 
	.
	
hello:pubYear a rdf:Property
	; api:label "publicationYear"
	; rdfs:range xsd:integer
    ; rdfs:comment "The subject is some published entity, the object is the year of its publication."
    ; rdfs:range xsd:integer
	.
    
hello:playTimeMinutes a rdf:Property
	; api:label "playTimeMinutes"
	; rdfs:label "playTimeMinutes"

	; rdfs:range xsd:integer
	.	
		
